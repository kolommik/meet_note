"""
–ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –ø–æ –≤—Å—Ç—Ä–µ—á–µ.
"""

import streamlit as st
import base64
from pathlib import Path
from utils.error_handler import safe_operation, ErrorType
from utils.file_handler import save_markdown_document
from ui.app_state import get_state, update_state
from utils.document_generation import generate_meeting_documents


def render_document_controls():
    """
    –†–µ–Ω–¥–µ—Ä–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å—Ç—Ä–µ—á–µ
    """
    st.header("üìù –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –≤—Å—Ç—Ä–µ—á–µ")

    # –û–±—ä—è—Å–Ω—è–µ–º, —á—Ç–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ
    st.info(
        "–ù–∞ —ç—Ç–æ–º —à–∞–≥–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –¥–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ –≤—Å—Ç—Ä–µ—á–µ:\n"
        "1. **–î–æ–∫—É–º–µ–Ω—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏** - —Å–æ–¥–µ—Ä–∂–∏—Ç –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ, "
        "—Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø–æ–ª–Ω—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç.\n"
        "2. **–°–∞–º–º–∞—Ä–∏ –≤—Å—Ç—Ä–µ—á–∏** - —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã."
    )

    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    llm_settings = get_state("llm_settings", {})
    model_name = llm_settings.get("model")
    llm_strategy = llm_settings.get("strategy")
    temperature = llm_settings.get("temperature", 0.0)
    max_tokens = llm_settings.get("max_tokens", 2048)

    transcript_text = get_state("corrected_transcript") or get_state(
        "speaker_updated_transcript"
    )
    analysis_results = get_state("analysis_results", {})

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if not transcript_text or not analysis_results:
        st.warning(
            "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–≥–∏."
        )
        return

    if not llm_strategy:
        st.error(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é LLM. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏."
        )
        return

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–æ–ª—å—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    with st.expander("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"):
        st.info(
            "–≠—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –±–æ–ª—å—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. "
            "–î–ª—è –æ–±—ã—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–¥–æ 2000 —Å–ª–æ–≤) —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–¥—Ö–æ–¥–∏—Ç—å."
        )

        max_tokens_per_chunk = st.slider(
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –æ–¥–Ω—É —á–∞—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞",
            min_value=512,
            max_value=4096,
            value=2048,
            step=256,
            help="–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–æ–ª—å—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. "
            "–ß–µ–º –±–æ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–µ–º –º–µ–Ω—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, "
            "–Ω–æ —Ç–µ–º –≤—ã—à–µ —Ä–∏—Å–∫ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞.",
        )

        show_progress = st.checkbox(
            "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏",
            value=True,
            help="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
        )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    documents_exist = get_state("transcript_document") and get_state("meeting_summary")
    button_text = "–û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã" if documents_exist else "–°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"

    if st.button(button_text, type="primary"):
        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ max_tokens –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–∞–π–¥–µ—Ä–∞
        max_tokens = max_tokens_per_chunk

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if show_progress:
            progress_bar = st.progress(0)
            progress_status = st.empty()
            progress_status.text("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")

        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..."):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
            try:
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                if show_progress:
                    progress_status.text("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞...")
                    progress_bar.progress(10)

                transcript_doc, summary_doc = generate_meeting_documents(
                    transcript_text=transcript_text,
                    analysis_results=analysis_results,
                    llm_strategy=llm_strategy,
                    model_name=model_name,
                    temperature=temperature,
                    max_tokens=max_tokens,
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                if show_progress:
                    progress_status.text(
                        "–î–æ–∫—É–º–µ–Ω—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
                    )
                    progress_bar.progress(90)

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —Ñ–∞–π–ª—ã
                file_base_name = Path(get_state("file_path", "meeting")).stem
                transcript_doc_path = save_markdown_document(
                    content=transcript_doc, filename=f"{file_base_name}_transcript.md"
                )
                summary_doc_path = save_markdown_document(
                    content=summary_doc, filename=f"{file_base_name}_summary.md"
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                update_state("transcript_document", transcript_doc)
                update_state("transcript_document_path", transcript_doc_path)
                update_state("meeting_summary", summary_doc)
                update_state("meeting_summary_path", summary_doc_path)
                update_state("file_status", "documents_created")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É LLM
                update_state(
                    "llm_stats",
                    {
                        "input_tokens": llm_strategy.get_input_tokens(),
                        "output_tokens": llm_strategy.get_output_tokens(),
                        "cache_create_tokens": llm_strategy.get_cache_create_tokens(),
                        "cache_read_tokens": llm_strategy.get_cache_read_tokens(),
                        "full_price": llm_strategy.get_full_price(),
                        "model": model_name,
                        "provider": llm_settings.get("provider", ""),
                    },
                )

                # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                if show_progress:
                    progress_status.text("–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
                    progress_bar.progress(100)

                st.success("–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
                st.rerun()
            except Exception as e:
                if show_progress:
                    progress_status.text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {str(e)}")
                    progress_bar.empty()
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {str(e)}")


def render_document_content():
    """
    –†–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å—Ç—Ä–µ—á–µ
    """
    if get_state("file_status") != "documents_created":
        return

    st.header("üìù –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –≤—Å—Ç—Ä–µ—á–µ")

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    transcript_doc = get_state("transcript_document", "")
    summary_doc = get_state("meeting_summary", "")
    transcript_doc_path = get_state("transcript_document_path", "")
    summary_doc_path = get_state("meeting_summary_path", "")

    # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤–æ–µ –∏–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
    file_base_name = Path(get_state("file_path", "meeting")).stem

    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    doc_tab1, doc_tab2 = st.tabs(["–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤—Å—Ç—Ä–µ—á–∏", "–°–∞–º–º–∞—Ä–∏ –≤—Å—Ç—Ä–µ—á–∏"])

    with doc_tab1:
        st.markdown(transcript_doc)
        col1, col2 = st.columns([1, 4])
        with col1:
            if transcript_doc_path:
                create_download_button(
                    transcript_doc,
                    f"{file_base_name}_transcript.md",
                    "–°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç",
                )

    with doc_tab2:
        st.markdown(summary_doc)
        col1, col2 = st.columns([1, 4])
        with col1:
            if summary_doc_path:
                create_download_button(
                    summary_doc, f"{file_base_name}_summary.md", "–°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç"
                )


def create_download_button(content, filename, button_text="–°–∫–∞—á–∞—Ç—å"):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞–∫ —Ñ–∞–π–ª–∞.

    Args:
        content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        filename: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        button_text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    """
    # –ö–æ–¥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ base64
    b64 = base64.b64encode(content.encode()).decode()

    # –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    href = (
        f'<a href="data:file/txt;base64,{b64}" download="{filename}" style="text-decoration:none;">'
        f'<button style="padding:0.5rem; background-color:#4CAF50; color:white; '
        f'border:none; border-radius:0.3rem; cursor:pointer; width:100%;">{button_text}</button></a>'
    )

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º HTML
    st.markdown(href, unsafe_allow_html=True)


def download_as_file(content, filename):
    """
    –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞–∫ —Ñ–∞–π–ª–∞.

    Args:
        content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        filename: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    """
    return safe_operation(
        _download_as_file_impl,
        ErrorType.UI_ERROR,
        operation_name="–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è",
        content=content,
        filename=filename,
        default_return=None,
    )


def _download_as_file_impl(content, filename):
    """
    –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞

    Args:
        content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        filename: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —Ñ–∞–π–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    if not filename.endswith(".md"):
        filename = f"{filename}.md"

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    st.download_button(
        label="–°–∫–∞—á–∞—Ç—å",
        data=content,
        file_name=filename,
        mime="text/markdown",
    )
