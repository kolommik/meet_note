"""
–ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –ø–æ –≤—Å—Ç—Ä–µ—á–µ.
"""

import streamlit as st
import streamlit.components.v1 as components
import base64
from pathlib import Path
from utils.file_handler import save_markdown_document
from utils.llm_stats import update_llm_stats
from ui.app_state import get_state, update_state
from ui.ui_components import copy_button
from utils.document_generation import generate_meeting_summary


def render_document_controls():
    """
    –†–µ–Ω–¥–µ—Ä–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å—Ç—Ä–µ—á–µ
    """
    st.header("üìù –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –≤—Å—Ç—Ä–µ—á–µ")

    # –û–±—ä—è—Å–Ω—è–µ–º, —á—Ç–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ
    st.info(
        "–ù–∞ —ç—Ç–æ–º —à–∞–≥–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –¥–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ –≤—Å—Ç—Ä–µ—á–µ:\n"
        "1. **–î–æ–∫—É–º–µ–Ω—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏** - —Å–æ–¥–µ—Ä–∂–∏—Ç –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ, "
        "—Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø–æ–ª–Ω—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç.\n"
        "2. **–°–∞–º–º–∞—Ä–∏ –≤—Å—Ç—Ä–µ—á–∏** - —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã."
    )

    # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    llm_settings = get_state("llm_settings", {})
    model_name = llm_settings.get("model")
    llm_strategy = llm_settings.get("strategy")
    temperature = llm_settings.get("temperature", 0.0)
    max_tokens = llm_settings.get("max_tokens", 2048)

    transcript_text = get_state("corrected_transcript") or get_state(
        "speaker_updated_transcript"
    )
    analysis_results = get_state("analysis_results", {})

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if not transcript_text or not analysis_results:
        st.warning(
            "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–≥–∏."
        )
        return

    if not llm_strategy:
        st.error(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é LLM. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏."
        )
        return

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    documents_exist = get_state("transcript_document") and get_state("meeting_summary")
    button_text = "–û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã" if documents_exist else "–°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"

    if st.button(button_text, type="primary"):

        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..."):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
            try:
                summary_doc = generate_meeting_summary(
                    transcript_text=transcript_text,
                    analysis_results=analysis_results,
                    llm_strategy=llm_strategy,
                    model_name=model_name,
                    temperature=temperature,
                    max_tokens=max_tokens,
                )

                transcript_doc = transcript_text

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —Ñ–∞–π–ª—ã
                file_base_name = Path(get_state("file_path", "meeting")).stem
                transcript_doc_path = save_markdown_document(
                    content=transcript_doc, filename=f"{file_base_name}_transcript.md"
                )
                summary_doc_path = save_markdown_document(
                    content=summary_doc, filename=f"{file_base_name}_summary.md"
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                update_state("transcript_document", transcript_doc)
                update_state("transcript_document_path", transcript_doc_path)
                update_state("meeting_summary", summary_doc)
                update_state("meeting_summary_path", summary_doc_path)
                update_state("file_status", "documents_created")

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É LLM
                llm_stats = update_llm_stats(llm_strategy, model_name)
                update_state("llm_stats", llm_stats)

                st.success("–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
                st.rerun()
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {str(e)}")


def render_document_content():
    """
    –†–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å—Ç—Ä–µ—á–µ
    """
    if get_state("file_status") != "documents_created":
        return

    st.header("üìù –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –≤—Å—Ç—Ä–µ—á–µ")

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    transcript_doc = get_state("transcript_document", "")
    summary_doc = get_state("meeting_summary", "")
    transcript_doc_path = get_state("transcript_document_path", "")
    summary_doc_path = get_state("meeting_summary_path", "")

    # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤–æ–µ –∏–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏
    file_base_name = Path(get_state("file_path", "meeting")).stem

    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    doc_tab1, doc_tab2 = st.tabs(["–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –≤—Å—Ç—Ä–µ—á–∏", "–°–∞–º–º–∞—Ä–∏ –≤—Å—Ç—Ä–µ—á–∏"])

    with doc_tab1:
        st.markdown(transcript_doc)
        col1, col2, _ = st.columns([1, 1, 1])
        with col1:
            if transcript_doc_path:
                create_download_button(
                    transcript_doc, f"{file_base_name}_transcript.md"
                )
        with col2:
            copy_button(transcript_doc)

    with doc_tab2:
        st.markdown(summary_doc)
        col1, col2, _ = st.columns([1, 1, 1])
        with col1:
            if summary_doc_path:
                create_download_button(summary_doc, f"{file_base_name}_summary.md")
        with col2:
            copy_button(summary_doc)


def create_download_button(content, filename, button_text="üíæ –°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç"):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞–∫ —Ñ–∞–π–ª–∞.

    Args:
        content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        filename: –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        button_text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    """
    # –ö–æ–¥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ base64
    b64 = base64.b64encode(content.encode()).decode()

    # –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Å—Ç–∏–ª–µ–º
    html_code = f"""
    <div>
        <a href="data:file/txt;base64,{b64}" download="{filename}" style="text-decoration:none;">
            <button style="
                padding: 8px 16px;
                background-color: #4CAF50;
                color: white;
                border: none;
                cursor: pointer;
                border-radius: 0.3rem;
                width: 100%;">
                {button_text}
            </button>
        </a>
    </div>
    """

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º HTML
    components.html(html_code, height=60)
