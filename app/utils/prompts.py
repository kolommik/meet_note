class PromptTemplate:
    """Класс для шаблонизации и форматирования промптов."""

    def __init__(self, template: str):
        """
        Инициализация шаблона промпта.

        Args:
            template: Шаблон с плейсхолдерами в формате {placeholder}
        """
        self.template = template

    def format(self, **kwargs) -> str:
        """
        Форматирует шаблон, подставляя значения.

        Args:
            **kwargs: Пары ключ-значение для подстановки

        Returns:
            str: Отформатированный промпт
        """
        return self.template.format(**kwargs)


# Системный промпт для анализа транскрипции
TRANSCRIPT_ANALYSIS_SYSTEM_PROMPT = PromptTemplate(
    """
Ты - аналитик разговоров. Твоя задача - проанализировать транскрипцию разговора и определить:
1. Имя каждого спикера (на основе обращений в тексте)
2. Предполагаемую роль каждого спикера в разговоре
3. Краткое описание темы разговора (1-2 предложения)

Для каждого спикера укажи:
- Предполагаемое имя (если упоминается в тексте)
- Роль в разговоре
- Уверенность в определении (низкая/средняя/высокая)

Формат ответа должен быть в JSON со следующей структурой:
{{
    "speakers": {{
        "speaker_X": {{
            "name": "Имя или 'Неизвестно'",
            "role": "Роль в разговоре",
            "confidence": "низкая/средняя/высокая"
        }},
        ...
    }},
    "summary": "Краткое описание темы разговора"
}}
"""
)

# Пользовательский промпт для анализа транскрипции
TRANSCRIPT_ANALYSIS_USER_PROMPT = PromptTemplate(
    """
Проанализируй следующую транскрипцию разговора.

Статистика по спикерам:
{stats_text}

Транскрипция:
{transcript_text}

Определи имена спикеров (если они упоминаются в тексте), их роли в разговоре
и дай краткое описание темы разговора. Ответ дай в формате JSON согласно инструкции.
"""
)

# Доступ к промптам через словарь для удобства
PROMPTS = {
    "transcript_analysis_system": TRANSCRIPT_ANALYSIS_SYSTEM_PROMPT,
    "transcript_analysis_user": TRANSCRIPT_ANALYSIS_USER_PROMPT,
}
